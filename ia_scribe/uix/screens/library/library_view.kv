<BookViewLabel>:
    color: 0, 0, 0, 1
    disabled_color: 0.6, 0.6, 0.6, 1.0
    text_size: self.size
    valign: 'middle'
    shorten: True
    shorten_from: 'right'
    font_name: 'FreeSansTTScribe'


<BookViewButton@ButtonBehavior+BookViewLabel>:


<BookRowView>:
    canvas:
        Color:
            rgba: self.color_down if self.selected else self.color_normal
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgb: 0.75, 0.75, 0.75
        Line:
            width: 1
            points: [self.x, self.y, self.right, self.y]
    BoxLayout:
        size_hint_x: None
        width: '30dp'
        padding: '6dp', 0
        Image:
            source: '{}.png'.format(root.media_type)
    BookViewLabel:
        text: root.creator
        tooltip: root.creator if root.creator not in ['-', '--'] else ''
    BookViewLabel:
        text: root.title
        tooltip: root.title if root.title not in ['-', '--'] else ''
    BookViewButton:
        id: identifier_button
        text: root.identifier
        color_normal: 0, 0, 0, 1
        color: root.color_down if self.state == 'down' else self.color_normal
        on_release: root._on_identifier_button_release(*args)
        tooltip: root.identifier if root.identifier not in ['-', '--'] else ''
    BookViewLabel:
        text: root.shiptracking_id
        size_hint_max_x: '150dp'
    BookViewLabel:
        text: root.operator
    BookViewLabel:
        text: root.status
        size_hint_max_x: '200dp'
        color: root.status_color
        font_name: 'DroidSans'
        bold: root.status_bold
    BookViewLabel:
        text: root.date_created
        size_hint_max_x: '150dp'
    BookViewLabel:
        text: root.date_last_modified
        size_hint_max_x: '150dp'
    BookViewLabel:
        text: root.notes_count
        size_hint_max_x: '80dp'
    BookViewLabel:
        text: root.leafs_count
        size_hint_max_x: '100dp'


<BookThumbView>:
    orientation: 'vertical'
    padding: '5dp'
    spacing: '2dp'
    canvas:
        Color:
            rgba: self.color_down if self.selected else self.color_normal
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgb: 0.75, 0.75, 0.75
        Line:
            points: [self.x, self.top, self.x, self.y, self.right, self.y]
    AsyncImage:
        source: root.image_source
        color: (0.6, 0.6, 0.6, 1.0) if self.disabled else (1, 1, 1, 1)
    BoxLayout:
        orientation: 'vertical'
        size_hint_y: None
        height: '60dp' if root.identifier else '40dp'
        BookViewLabel:
            text: root.identifier or ''
            font_name: 'DroidSans'
            bold: True
            size_hint_y: 1.0 if root.identifier else 0
        BookViewLabel:
            text: root.title
        BookViewLabel:
            text: u'by ' + root.creator
            font_size: '13sp'


<LibraryViewHeader>:
    padding: '15dp', '5dp'
    spacing: '10dp'
    canvas:
        Color:
            rgb: [0.8, 0.8, 0.8]
        Rectangle:
            pos: self.pos
            size: self.size
    AnchorLayout:
        anchor_x: 'left'
        size_hint_min_x: book_menu.width
        BoxLayout:
            id: book_menu
            size_hint_x: None
            width: '500dp'
            spacing: '3dp'
            IconButton:
                padding: 5
                icon_width: '30dp'
                size_hint_max_x: '130dp'
                icon: 'book_white.png'
                text: ' New book'
                text_font_size: '16sp'
                color_normal: 0, 0.5, 0, 0.7
                on_release:
                    root.dispatch(root.EVENT_OPTION_SELECT, root.OPTION_NEW_BOOK)
            IconButton:
                padding: 5
                icon_width: '30dp'
                size_hint_max_x: '110dp'
                icon: 'cd_white.png'
                text: ' New CD'
                text_font_size: '16sp'
                color_normal: 0, 0.5, 0, 0.7
                on_release:
                    root.dispatch(root.EVENT_OPTION_SELECT, root.OPTION_NEW_CD)
            IconButton:
                padding: 5
                icon_width: '30dp'
                size_hint_max_x: '110dp'
                icon: 'load_metadata.png'
                text: ' Import'
                text_font_size: '16sp'
                color_normal: 0.1, 0.3, 0.8, .7
                on_release:
                    root.dispatch(root.EVENT_OPTION_SELECT, root.OPTION_IMPORT_BOOK)

    AnchorLayout:
        anchor_x: 'right'
        BoxLayout:
            size_hint_x: None
            width: self.minimum_width
            spacing: '3dp'
            Label:
                text:'Filter by status:'
                color: (0, 0, 0, 1)
                size_hint_x: None
                width: '100dp'
            Spinner:
                id: filter_spinner
                text: 'all'
                size_hint_x: None
                width: '220dp'
                sync_height: True
                on_text: root._on_filter_spinner_value(*args)
            TooltipTextInput:
                id: filter_input
                size_hint_x: None
                width: '273dp'
                tooltip: 'Filter by title, creator, identifier or shiptracking'
                multiline: False
                text: root.filter_text
                font_name: 'FreeSansTTScribe'
                on_text: root.filter_text = args[1]
                padding_x: '26dp'
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, 1 if self.focus else 0.5)
                    Rectangle:
                        source: 'icon_filter.png'
                        pos: self.x + dp(4), self.center_y - dp(10)
                        size: dp(20), dp(20)
            BoxLayout:
                id: view_menu
                size_hint_x: None
                width: '80dp'
                spacing: '2dp'
                TooltipToggleButton:
                    background_normal: 'grid_view_icon.png'
                    background_down: 'grid_view_icon_selected.png'
                    group: 'view_menu'
                    key: 'grid'
                    allow_no_selection: False
                    border: 0, 0, 0, 0
                    tooltip: 'Cover view'
                TooltipToggleButton:
                    group: 'view_menu'
                    state: 'down'
                    background_normal: 'list_view_icon.png'
                    background_down: 'list_view_icon_selected.png'
                    border: 0, 0, 0, 0
                    tooltip: 'List view'
                    key: 'list'
                    allow_no_selection: False


<BookSortHeader>:
    rows: 1
    canvas:
        Color:
            rgb: 0.75, 0.75, 0.75
        Line:
            width: 1
            points: [self.x, self.y, self.right, self.y]
    SortButton:
        key: 'media_type'
        text: 'Type'.upper()
        width: '30dp'
        size_hint_x: None
    SortButton:
        key: 'creator'
        text: 'Creator'.upper()
    SortButton:
        key: 'title'
        text: 'Title'.upper()
    SortButton:
        key: 'identifier'
        text: 'Identifier'.upper()
    SortButton:
        key: root.tracking.lower()
        text: root.tracking.upper()
        size_hint_max_x: '150dp'
    SortButton:
        key: 'operator'
        text: 'Operator'.upper()
    SortButton:
        key: 'status'
        text: 'Item Status'.upper()
        size_hint_max_x: '200dp'
    SortButton:
        key: 'date_created'
        text: 'Date Created'.upper()
        size_hint_max_x: '150dp' if root.views_layout == 'list' else None
    SortButton:
        key: 'date_last_modified'
        text: 'Last Edit'.upper()
        size_hint_max_x: '150dp' if root.views_layout == 'list' else None
    SortButton:
        key: 'notes_count'
        text: 'Notes'.upper()
        size_hint_max_x: '80dp' if root.views_layout == 'list' else None
    SortButton:
        key: 'leafs'
        text: 'Leaves'.upper()
        size_hint_max_x: '100dp' if root.views_layout == 'list' else None


<BookRowViewContainer>:
    default_size: None, dp(36)
    default_size_hint: 1, None
    cols: 1
    size_hint_y: None
    height: self.minimum_height
    padding: '15dp', 0, '15dp', 0
    right_count: 0


<BookThumbViewContainer>:
    default_size: dp(180), dp(240)
    default_size_hint: None, None
    cols: max(1, int((self.width - 2 * dp(15)) / self.default_size[0]))
    size_hint_y: None
    height: self.minimum_height
    padding:
        [(self.width - 2 * dp(15) - self.cols * self.default_size[0]) / 2.0,
        '2dp']
    on_padding:
        self.cols = max(1, self.cols - 1) if args[1][0] < dp(15) else self.cols
    right_count: 0


<LibraryView>:
    cols: 1
    spacing: '5dp'
    canvas:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
    LibraryViewHeader:
        id: library_header
        size_hint_y: None
        height: '42dp'
        filter_text: root.filter_text
        views_layout: root.views_layout
        filter_status: root.filter_status

        on_filter_text: root.filter_text = args[1]
        on_views_layout: root.views_layout = args[1]
        on_filter_status: root.filter_status = args[1]
    BookSortHeader:
        id: sort_header
        spacing: root.views_spacing
        size_hint_y: None
        height: '26dp'
        padding: '15dp', 0, '15dp', 0
        sort_key: root.sort_key
        sort_order: root.sort_order
        on_sort_key: root.sort_key = args[1]
        on_sort_order: root.sort_order = args[1]
        views_layout: root.views_layout
    RecycleView:
        id: rv
        effect_cls: 'ScrollEffect'
        scroll_type: ['bars']
        bar_width: '15dp'
        bar_color: 0.5, 0.5, 0.5, 0.9
        bar_inactive_color: 0.7, 0.7, 0.7, 0.7
        scroll_wheel_distance: '50dp'
        BookViewContainer:
            cols: 1
